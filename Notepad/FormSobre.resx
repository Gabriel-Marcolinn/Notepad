<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /+sPkpR8rUIAAAAASUVORK5CYII=
</value>
  </data>
</root>